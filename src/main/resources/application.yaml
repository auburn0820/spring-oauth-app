server:
  port: 8080

spring:
  application:
    name: oauth-server
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope:
              - profile
              - email
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
          apple:
            client-id: ${APPLE_CLIENT_ID:your-apple-client-id}
            client-secret: ${APPLE_CLIENT_SECRET:your-apple-client-secret}
            scope:
              - name
              - email
            redirect-uri: http://localhost:8080/login/oauth2/code/apple
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
            user-name-attribute: sub
          apple:
            authorization-uri: https://appleid.apple.com/auth/authorize
            token-uri: https://appleid.apple.com/auth/token
            jwk-set-uri: https://appleid.apple.com/auth/keys
            user-name-attribute: sub
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890} # TODO: Change this to a secure key
  access-token-expiration-ms: 6000 # 1 minute
  refresh-token-expiration-ms: 6000 # 1 day
